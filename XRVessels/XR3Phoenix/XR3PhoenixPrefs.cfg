##
#  XR Vessel add-ons for OpenOrbiter Space Flight Simulator
#  Copyright (C) 2006-2025 Douglas Beachy
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
#  Email: mailto:doug.beachy@outlook.com
#  Web: https://www.alteaaerospace.com
##

#--------------------------------------------------------------------------
# XR3 Phoenix Configuration File
#
# Version 0.1-ALPHA 1
#
# You should edit this file as desired, but you should also back up 
# the original version first in case you want to restore the default settings later.
#
# Any values altered will take effect immediately the next time a scenario is loaded.
#--------------------------------------------------------------------------

[SYSTEM]

#--------------------------------------------------------------------------
# Define the 2D panel resolution that the XR5 should use.
#
#  0 = Autodetect (default)
#  1 = Use 1280-pixel-wide panels
#  2 = Use 1600-pixel-wide panels
#  3 = Use 1920-pixel-wide panels
#
# The default value is 0 (autodetect).
#--------------------------------------------------------------------------
2DPanelWidth=0

#=========================================================================

#--------------------------------------------------------------------------
# Define the default name, age, pulse, mass, rank, and mesh of all crew members.  
# If a scenario does not contain Mmu data for passengers, the values below are used.
#
# NOTE: the values below are only used if scenario file does not contain Mmu data for passengers
# *or* if a new Vanguard is created via the scenario editor or another add-on.
#
# Note that [PASSENGER0] occupies the pilot seat.
#
# 'Mesh' sets the mesh used for EVA astronauts.
# The 'Mesh' setting is a path relative to the top-level Orbiter directory; e.g., C:\Orbiter.  
#
# NOTE: do NOT include the ".msh" extension; it will be added automatically.
# 
# You are also free to use your own EVA mesh here; simply plug in the path your mesh file below
# for any or all of the passengers.  The mesh file may reside anywhere under the Orbiter root directory, 
# but each mesh file must end in ".msh".
#
# NOTE: high-res EVA meshes created by Greg Burch and used with permission; refer to the XR5 Flight Operations Manual for details.
#
# Also note that you can "mix and match" different types of astronaut meshes (both high- and medium-polygon, 
# for example).  Each astronaut can use any valid mesh.
#
# Pre-installed MMU meshes are:
#    XR5Vanguard\EVAF1   : Female mesh #1  (high-polygon) (red stripe)
#    XR5Vanguard\EVAF2   : Female mesh #2  (high-polygon) (green stripe)
#    XR5Vanguard\EVAM1   : Male mesh #1    (high-polygon) (blue stripe)
#    XR5Vanguard\EVAM2   : Male mesh #2    (high-polygon) (yellow stripe)
#
# Note that the "Commander" and "Pilot" ranks are used to determine whether the Commander or Pilot 
# is on board if 'RequirePilotForShipControl=true'.
#    
#--------------------------------------------------------------------------

[PASSENGER0]
Name=Michael Samuelle
Age=37
Pulse=65
Mass=78
Rank=Commander
Mesh=XR5Vanguard\EVAM1

[PASSENGER1]
Name=Nikita Simone
Age=29
Pulse=65
Mass=54
Rank=Pilot
Mesh=XR5Vanguard\EVAF1

[PASSENGER2]
Name=Madeline Dolenc
Age=36
Mass=58
Pulse=68
Rank=Mission Specialist Two
Mesh=XR5Vanguard\EVAF2

[PASSENGER3]
Name=Seymour Birkoff
Age=24
Mass=68
Pulse=71
Rank=Mission Specialist Three
Mesh=XR5Vanguard\EVAM2

[PASSENGER4]
Name=Katherine Quinn
Age=28
Mass=56
Pulse=67
Rank=Mission Specialist Four
Mesh=XR5Vanguard\EVAF2

[PASSENGER5]
Name=Cameron Mitchell
Age=36
Mass=77
Pulse=65
Rank=SG Team Leader
Mesh=XR5Vanguard\EVAM1

[PASSENGER6]
Name=Samantha Carter
Age=33
Mass=53
Pulse=66
Rank=SG Support 1
Mesh=XR5Vanguard\EVAF1

[PASSENGER7]
Name=Daniel Jackson
Age=35
Mass=75
Pulse=68
Rank=SG Support 2
Mesh=XR5Vanguard\EVAM2

[PASSENGER8]
Name=Teal'c
Age=31
Mass=104
Pulse=64
Rank=SG Support 3
Mesh=XR5Vanguard\EVAM1

[PASSENGER9]
Name=Vala Mal Doran
Age=30
Mass=53
Pulse=67
Rank=SG Support 4
Mesh=XR5Vanguard\EVAF2

[PASSENGER10]
Name=Elizabeth Weir
Age=36
Mass=56
Pulse=68
Rank=Atlantis Commander
Mesh=XR5Vanguard\EVAF1

[PASSENGER11]
Name=John Sheppard
Age=34
Mass=77
Pulse=64
Rank=Atlantis Team Leader
Mesh=XR5Vanguard\EVAM1

[PASSENGER12]
Name=Rodney McKay
Age=35
Mass=90
Pulse=72
Rank=Atlantis Support 1
Mesh=XR5Vanguard\EVAM2

[PASSENGER13]
Name=Teyla Emmagan
Age=27
Mass=57
Pulse=68
Rank=Atlantis Support 2
Mesh=XR5Vanguard\EVAF2

[PASSENGER14]
Name=Ronon Dex
Age=32
Mass=97
Pulse=63
Rank=Atlantis Support 3
Mesh=XR5Vanguard\EVAF1

[PASSENGER15]
Name=Carson Beckett
Age=38
Mass=95
Pulse=74
Rank=Atlantis Medical Officer
Mesh=XR5Vanguard\EVAF2

[PASSENGER16]
Name=Lee Adama
Age=26
Mass=74
Pulse=65
Rank=BSG Team Leader
Mesh=XR5Vanguard\EVAM1

[PASSENGER17]
Name=Kara Thrace
Age=26
Mass=55
Pulse=67
Rank=BSG Support 1
Mesh=XR5Vanguard\EVAF1

#=========================================================================

[GENERAL]

#--------------------------------------------------------------------------
# Number of crew members to add to the ship if there is no MMu data in the scenario file, 
# or if there is no scenario file (for example, when spawning an XR5 via the scenario editor).
# Crew will be added starting at [PASSENGER0].
#
# The default is 18 ( [PASSENGER0] through [PASSENGER17] )
#--------------------------------------------------------------------------
DefaultCrewComplement = 18

#--------------------------------------------------------------------------
# Enable or disable main and hover engine lighting effects.
#
# NOTE: if this effect is enabled, please make sure that "Local light sources" in the Orbiter launchpad's 
# "Visual Effects" tab is enabled as well; otherwise the effect will still be disabled.
#
# 0 = disabled
# 1 = enabled
#
# The default is 1 (enabled).
#--------------------------------------------------------------------------
EnableEngineLightingEffects = 1

#--------------------------------------------------------------------------
# Enable or disable the altitude and vertical speed indicators on the surface mode HUD.
#
# 0 = disabled
# 1 = enabled
#
# The default is 1 (enabled).
#--------------------------------------------------------------------------
ShowAltitudeAndVerticalSpeedOnHUD = 1

#--------------------------------------------------------------------------
# Set distance-to-closest-surface-base indicator on the surface mode HUD altitude threshold.
#
# NOTE: by design, the distance shown is the *surface distance* only: it does not include
#       distance due to altitude.
#
# < 0 = disabled (e.g., -1)
#   0 = always enabled regardless of vessel altitude
# > 0 = altitude threshold below which distance to closest surface base will be shown
#
# The default is 200 (surface base distance shown only when ship is <= 200 km in altitude).
#--------------------------------------------------------------------------
DistanceToBaseOnHUDAltitudeThreshold = 200

#--------------------------------------------------------------------------
# If enabled, either the Commander or Pilot must be 
# on board in order to control the ship; otherwise, the ship's controls will 
# be disabled until either the Commander or Pilot reenter the ship.  The
# Commander and Pilot are determined by the crew member's rank as defined 
# in the PASSENGER sections.
#
# 0 = Any crew member on board can pilot the ship.
# 1 = Only the Commander or Pilot can pilot the ship.
#
# The default is 0, meaning that any crew member on board can pilot the ship.
#--------------------------------------------------------------------------
RequirePilotForShipControl=0

#--------------------------------------------------------------------------
# Main Fuel ISP ("Specific Impulse") setting.  This determines how much 
# main/hover/rcs fuel is burned each second for a given thrust level.
# Higher settings allow longer flights without refueling.  Remember to 
# update the 'LOXLoadout' value later in this file as well so the crew will
# have enough oxygen for the mission!
#
# NOTE: The 'Expert' setting (0) is tuned so that you will need to use your SCRAM engines
# efficiently during ascent to LEO ("Low Earth Orbit").
#
# NOTE: these settings below are calibrated for *minimal payload in the bay*, so if you 
# carry a heavy payload you may have to bump up your fuel setting to the next higher setting.
# The ISP setting for each level is shown in [brackets].
#   0 = Expert    (ISS Only w/expert use of SCRAM engines and expert deorbit/landing)  [13943]
#   1 = Realistic (ISS Only)                [20914]
#   2 = Default   (ISS and Moon)            [25962]
#   3 = Medium    (ISS and Moon w/reserve)  [32981]
#   4 = Medium+   (Moon w/large reserve)    [40000] 
#   5 = Big       (Mars)                    [52922]
#   6 = Huge      (Jupiter+)                [366251]
#   7 = Massive   (Jupiter+ w/full payload) [549377]
#
# The default value is 2 (ISS and Moon).
#
# NOTE: You can override this global setting for a given scenario by setting a value for it in your scenario file; 
#       Refer to the scenario file named "Configuration File Override Example 2.scn" for an example.
#--------------------------------------------------------------------------
MainFuelISP=2

#--------------------------------------------------------------------------
# SCRAM Fuel ISP ("Specific Impulse") setting.  This determines how much 
# SCRAM fuel is burned each second for a given thrust level.  Higher settings
# allow longer flights without refueling.
#   0 = Realistic 
#   1 = 1.5x normal
#   2 = 3x normal
#   3 = 6x normal
#   4 = 10x normal
#
# The default value is 0 (Realistic).
#
# NOTE: You can override this global setting for a given scenario by setting a value for it in your scenario file; 
#       Refer to the scenario file named "Configuration File Override Example 2.scn" for an example.
#--------------------------------------------------------------------------
SCRAMFuelISP=0

#--------------------------------------------------------------------------
# LOX (Liquid Oxygen) loadout setting.  This determines the maximum duration of a mission without 
# replenishing the LOX tanks.  Times listed assume a full crew; reducing the 
# number of crew members will increase the maximum mission duration accordingly.
#
# Increasing this value will increase the LOX loaded into the ship.  The mass value
# displayed for each setting assumes a LOXConsumptionRate (the parameter following this one)
# of 4 (realistic: 100% of normal).  To reduce the LOX mass required for a long mission,
# leave LOXConsumptionRate set to its default value of -1 (AUTO), or set it it 0 (OFF) or 1 (very low).
#
# Valid options (duration assumes a full crew complement):
#   0 = 7 days          (  234 kg)
#   1 = 14 days         (  468 kg)
#   2 = one month       ( 1019 kg)
#   3 = three months    ( 3053 kg)
#   4 = six months      ( 6102 kg)
#   5 = one year        (12200 kg)
#   6 = two years       (24397 kg)
#   7 = three years     (36594 kg)
#   8 = four years      (48790 kg)
#   9 = five years      (60991 kg)
#
# The default value is 1 (14 days).
#--------------------------------------------------------------------------
LOXLoadout=1

#--------------------------------------------------------------------------
# LOX (Liquid Oxygen) consumption setting.  This determines how much oxygen is consumed
# by the crew for a given length of time.  This setting determines the LOX mass required for a 
# given mission duration; i.e.,
#
#       LOX mass loaded = LOXLoadout x LOXConsumptionRate
#       
# WARNING: setting this value to other than 0 (AUTO) or 1 (very low) may result in a significant mass increase 
# when LOXLoadout is set for a long mission duration (e.g., one year or longer).
#
# For example, with a LOXLoadout of 5 (one year), the actual LOX loaded would be:
#       4 (realistic) = 12200 kg (100% of normal)
#       3 (medium)    =  9150 kg (75% of normal)
#       2 (low)       =  6100 kg (50% of normal)
#       1 (very low)  =  3050 kg (25% of normal)
#       0 (OFF)       =   100 kg (mass is fixed)
#      -1 (AUTO)      =  3053 kg (varies between 100% and 12.5% of normal depending on LOXLoadout.)
#
# Valid options are:
#  -1 = AUTO      (Recommended; varies between 100% and 12.5% of normal depending on LOXLoadout.)
#   0 = NONE      (oxygen consumption DISABLED)
#   1 = very low  (25% of normal)
#   2 = low       (50% of normal)
#   3 = medium    (75% of normal)
#   4 = realistic (100% of normal)
#
# The default value is -1 (AUTO).
#
# NOTE: You can override this global setting for a given scenario by setting a value for it in your scenario file; 
#       Refer to the scenario file named "Configuration File Override Example 2.scn" for an example.
#--------------------------------------------------------------------------
LOXConsumptionRate=-1

#--------------------------------------------------------------------------
# Modifies the default crew oxygen consumpation rate.
#
# For example, a value of 2.5 would mean that the crew would consume oxygen
# at 2.5 times the normal rate.  Note that the crew's normal O2 consumption rate assumes
# that the ship's CO2 scrubbers are 100% efficient so that no oxygen is wasted.  This setting, 
# however, allows you to simulate wasted oxygen that is not reclaimed from CO2 by the scrubbers.
#
# Valid values are between 0.0 and 10.0.  
# The default value is 1.0 (normal consumption rate).
#
# NOTE: You can override this global setting for a given scenario by setting a value for it in your scenario file; 
#       Refer to the scenario file named "Configuration File Override Example 2.scn" for an example.
#--------------------------------------------------------------------------
LOXConsumptionMultiplier=1.0

#--------------------------------------------------------------------------
# Maximum main engine thrust, per engine (x2 for total):
#   0 = 5328 kN (easy)
#   1 = 4262 kN (realistic)
#--------------------------------------------------------------------------
MainEngineThrust=1

#--------------------------------------------------------------------------
# Maximum hover engine thrust, per engine (x2 for total):
#   0 = 4031 kN (easy)
#   1 = 2930 kN (realistic)
#--------------------------------------------------------------------------
HoverEngineThrust=1

#--------------------------------------------------------------------------
# SCRAM Fuel Heating Value (FHV): this is the amount of heat energy generated 
# from burning one kg of propellant.  This affects SCRAM thrust for a given
# fuel flow level.
#   0 = 3.5e8 (easy)
#   1 = 2.0e7 (realistic)
#--------------------------------------------------------------------------
SCRAMfhv=1

#--------------------------------------------------------------------------
# SCRAM Max Fuel Flow Rate (DMF): this is the maximum amount of fuel that can
# be burned in kg/sec; this affects the maximum thrust that the SCRAM engines
# can produce.  Note that this value will be adjusted to compensate for the
# 'SCRAMFuelISP' setting, so the actual maximum flow rate may vary from the 
# numbers below.
#   0 = 3.0 kg/sec (easy)
#   1 = 2.0 kg/sec (realistic)
#--------------------------------------------------------------------------
SCRAMdmf=1

#--------------------------------------------------------------------------
# APU Fuel Burn Rate : this is the rate at which APU fuel is burned in kg/sec.
# The Auxiliary Power Unit (APU) provides hydraulic power to the ship.
#   0 = unlimited : (runs indefinitely)
#   1 = very low  :  20.1 kg/minute (44 lb/minute)  (3.7 hours runtime)
#   2 = low       :  40.3 kg/minute (89 lb/minute)  (110 minutes runtime)
#   3 = moderate  :  60.4 kg/minute (133 lb/minute) (74 minutes runtime)
#   4 = realistic :  90.6 kg/minute (200 lb/minute) (49 minutes runtime)
#   5 = expert    : 135.9 kg/minute (300 lb/minute) (33 minutes runtime)
#
# The default value is 2 (low: 110 minutes runtime).
#
# NOTE: You can override this global setting for a given scenario by setting a value for it in your scenario file; 
#       Refer to the scenario file named "Configuration File Override Example 2.scn" for an example.
#--------------------------------------------------------------------------
APUFuelBurnRate=2

#--------------------------------------------------------------------------
# APU Idle Runtime Callouts : this is the "idle time" threshold in seconds 
# above which a voice callout will sound when the APU is running but without load.
#
# Valid range is 0 seconds (callouts disabled), or between 5 and 600 seconds.
#
# NOTE: if APUFuelBurnRate=0 (unlimited), this value is ignored since callouts 
# will be automatically disabled.
#
# The default value is 60 seconds.
#--------------------------------------------------------------------------
APUIdleRuntimeCallouts=60

#--------------------------------------------------------------------------
# Enable or disable auto-shutdown of the APU when the pilot switches vessel
# focus; this is a safety feature designed to prevent the pilot from
# accidentally leaving the APU on and running out of APU fuel while the
# focus is switched to another vessel.
#
# The default value is 1 (APU auto-shutdown ENABLED)
#
#   0 = APU auto-shutdown disabled
#   1 = APU auto-shutdown enabled (recommended)
#--------------------------------------------------------------------------
APUAutoShutdown=1

#--------------------------------------------------------------------------
# Enable autostart of the APU when the ship's autopilot or automated flight
# control systems need to shift the ship's center of gravity (this is necessary
# during reentry and on landing approach in an atmosphere).  If you are an
# experienced pilot and want to always manage the APU yourself, set this to
# option to 0 (disabled).
#
# The default value is 1 (APU auto-startup ENABLED)
#
#   0 = APU auto-startup for COG-shift disabled
#   1 = APU auto-startup for COG-shift enabled 
#--------------------------------------------------------------------------
APUAutostartForCOGShift=1

#--------------------------------------------------------------------------
# Enable or disable ship damage due to wing stress, hull heating, hard landings,
# crashes, excessive dynamic pressure, and SCRAM engine overheat.
#   0 = damage disabled
#   1 = damage enabled
#--------------------------------------------------------------------------
WingStressDamageEnabled=1
HullHeatingDamageEnabled=1
HardLandingsDamageEnabled=1
CrashDamageEnabled=1
DoorStressDamageEnabled=1
ScramEngineOverheatDamageEnabled=1
EnableDamageWhileDocked=1

#--------------------------------------------------------------------------
# Enable or disable reduction in thrust due to atmospheric pressure.
#   0 = easy (no reduction)
#   1 = realistic (reduction)
#--------------------------------------------------------------------------
EnableATMThrustReduction=1

#--------------------------------------------------------------------------
# Enable or disable flight control surface input from the pilot when
# Attitude Hold is engaged; this is designed to prevent pilots from
# "fighting" or "helping" the autopilot while flying in an atmosphere
# and accidentally causing the ship to lose attitude control.
#
#   0 = flight control surfaces disabled with Attitude Hold engaged (default)
#   1 = flight control surfaces enabled with Attitude Hold engaged
#           (recommended for experienced pilots only)
#--------------------------------------------------------------------------
EnableManualFlightControlsForAttitudeHold=0

#--------------------------------------------------------------------------
# Optionally invert the Attitude Hold pitch/AoA arrows (up/down) behavior.
# This affects both the on-screen arrow controls and 
# the NUMPAD-8 / NUMPAD-2 / ALT-NUMPAD-8 / ALT-NUMPAD-2 keys.
#
#   0 = normal (default) : down arrow = increase pitch / up arrow = decrease pitch
#   1 = inverted         : down arrow = decrease pitch / up arrow = increase pitch
#--------------------------------------------------------------------------
InvertAttitudeHoldPitchArrows=0

#--------------------------------------------------------------------------
# Optionally invert the Descent Hold rate arrows (up/down) behavior.
# This affects both the on-screen arrow controls and 
# the NUMPAD-8 / NUMPAD-2 / ALT-NUMPAD-8 / ALT-NUMPAD-2 / CTRL-NUMPAD-8 / CTRL-NUMPAD-2 keys.
#
#   0 = normal (default) : down arrow = increase rate / up arrow = decrease rate
#   1 = inverted         : down arrow = decrease rate / up arrow = increase rate
#--------------------------------------------------------------------------
InvertDescentHoldRateArrows=0

#--------------------------------------------------------------------------
# Sets the master voice callout volume, from 0 (mute) to 255 (maximum).
# 
# The default is 255 (maximum).
#--------------------------------------------------------------------------
AudioCalloutVolume=255

#--------------------------------------------------------------------------
# Set 'You are cleared to land' voice callout altitude in meters; to disable the callout,
# set it to 0.  Valid range is 0 (disabled) to 10000 meters.
#
# The default value is 1500.
#--------------------------------------------------------------------------
ClearedToLandCallout=1500

#--------------------------------------------------------------------------
# Set wav filename of liftoff and landing audio callouts.  These are the voice callouts that
# play when the ship's wheels leave the ground or touch down.  You can substitute your own
# wav file as well if you put your new custom wav file(s) in your $ORBITER_ROOT\XRSound\Default directory.
# (Note: "Wheels Up" and "Wheels Down" are pilot terms that refer to the time that your main gear lift off the runway
# or touch down on the runway again.)
#
# If you don't like the default callouts you can change or disable them here.
#
# Available pre-installed wav files for LiftoffCallout:
#    Wheels Up.wav  (default)
#    Liftoff.wav
#    Positive Rate.wav
#
# Available pre-installed wav files for TouchdownCallout:
#    Wheels Down.wav  (default)
#    Touchdown.wav
#
# To disable a callout, set value to NONE; e.g.,
#       LiftoffCallout=NONE
#--------------------------------------------------------------------------
LiftoffCallout=Wheels Up.wav
TouchdownCallout=Wheels Down.wav

#--------------------------------------------------------------------------
# Enable or disable the audible sonic boom as the ship crosses Mach 1.
#   0 = sonic boom disabled
#   1 = sonic boom enabled
#--------------------------------------------------------------------------
EnableSonicBoom=1

#--------------------------------------------------------------------------
# Enable or disable specific categories for voice callouts
#
# 0 = callouts for named category disabled
# 1 = callouts for named category enabled (default)
#--------------------------------------------------------------------------
EnableAudioStatusGreeting=1
EnableVelocityCallouts=1
EnableAltitudeCallouts=1
EnableDockingDistanceCallouts=1
EnableInformationCallouts=1
EnableRCSStatusCallouts=1
EnableAFStatusCallouts=1
EnableWarningCallouts=1

#--------------------------------------------------------------------------
# Set MDA (Multi-Display Area), secondary HUD, tertiary HUD, payload, 
# artificial horizon and [all other panel areas] refresh intervals in seconds.
# The smaller the value, the more often the data is rendered.  However, setting 
# a value too low can impact the frame rate, particularly if the frame rate is high.
# Valid range is 0 - 2.0.  If 0, data is updated every frame. Note that you will 
# very likely not be able to perceive anything higher than 60 updates-per-second
# in any case (i.e., an interval below 0.0167).
#
# Default is 0.05 (20 updates-per-second) for all except PanelUpdateInterval and
# ArtificialHorizonUpdateInterval, which default to 0.0167 (60 updates-per-second).
#--------------------------------------------------------------------------
MDAUpdateInterval=0.05
SecondaryHUDUpdateInterval=0.05
TertiaryHUDUpdateInterval=0.05
PayloadScreensUpdateInterval=0.05
ArtificialHorizonUpdateInterval=0.0167
PanelUpdateInterval=0.0167

#--------------------------------------------------------------------------
# Define refueling / LOX (Liquid Oxygen) resupply settings.  
#
# 'AllowGroundResupply' applies to all planets and moons.
# 'AllowDockResupply' applies to all vessels to which you may dock.
# 'AllowEarthOnlyResupply' specifies which tanks (if any) may be resupplied ONLY while landed on Earth.
#
# Valid options are:
#   main = refuel MAIN tanks
#   scram = refuel SCRAM tanks
#   apu = refuel APU tanks
#   lox = replenish LOX tanks
#
# A value may be empty as well, preventing refueling at all; e.g.,
#
#    AllowGroundResupply = 
#
# ...would prevent ground refueling of any tank.
#
# By default, you may resupply main fuel, LOX, and APU fuel while landed or docked anywhere, but you may only 
# resupply SCRAM fuel while landed on Earth.
#--------------------------------------------------------------------------
AllowGroundResupply = main,lox,apu
AllowDockResupply = main,lox,apu
AllowEarthOnlyResupply = scram

#--------------------------------------------------------------------------
# Set internal systems heating rate; this is the rate at which the coolant temperature 
# in the liquid cooling system rises as it cools the ship's internal computer 
# and electronic systems.  The times listed indicate approximate maximum runtimes 
# before the radiator must be deployed to prevent overheating.
#   0 = easy      (~139 minutes)
#   1 = realistic (~63 minutes)
#   2 = OFF (coolant maintains nominal temperature without radiator being deployed)
#
# NOTE: You can override this global setting for a given scenario by setting a value for it in your scenario file; 
#       Refer to the scenario file named "Configuration File Override Example 2.scn" for an example.
#--------------------------------------------------------------------------
CoolantHeatingRate=1

#--------------------------------------------------------------------------
# Enable or disable Orbiter's default auto-refueling behavior when
# touching down on a landing pad.
#
# You should set this value to 1 (Orbiter auto-refueling enabled) only if you
# want Orbiter to automatically and instantly refuel you when you touch down on a landing pad.
#
# If you will only be using the XR5's built-in refueling features, leave
# this value set to its default of 0 (Orbiter auto-refueling disabled).
#
#   0 = Orbiter auto-refueling disabled (recommended)
#   1 = Orbiter auto-refueling enabled
#--------------------------------------------------------------------------
OrbiterAutoRefuelingEnabled=0

#--------------------------------------------------------------------------
# Enable or disable vertical scrolling of the lower instrument panel.  Most users
# should not enable this feature: you only need this if you are running Orbiter
# in a window with a vertical size of less than about 600 pixels: if your window is too 
# short vertically you will not be able to reach the turbopack controls on the lower panel,
# so if that is the case you should set this value to 1.  Note, however, that the Orbiter 
# core will then allow the lower panel to be scrolled until it is completely off-screen, 
# which will result in the Orbiter core rendering an external view "behind" the panel.
# 
# The default value is 0 (vertical scrolling disabled).
#
#   0 = lower 2D panel vertical scrolling disabled (recommended)
#   1 = lower 2D panel vertical scrolling enabled 
#--------------------------------------------------------------------------
Lower2DPanelVerticalScrollingEnabled=0

#--------------------------------------------------------------------------
# Enable or disable the parking brake functionality.
# NOTE: this should not normally be needed, and may cause side effects.
#
#   0 = Disable parking brake functionality (default)
#   1 = Enable parking brake functionality
#--------------------------------------------------------------------------
EnableParkingBrakes = 0


###########################################################################
# TERTIARY (left-hand side) HUD COLORS section.
#
# The default settings are for a transparent green tertiary HUD.  
# If you prefer a solid background, try these settings:
#
# [Dark blue text on light gray background]
#    TertiaryHUDNormalColor=42, 58, 130        
#    TertiaryHUDBackgroundColor=217, 217, 217
###########################################################################

#--------------------------------------------------------------------------
# Tertiary HUD NORMAL FONT and BORDER color in RGB format: red,green,blue (0-255)
#
# Default is medium-green: 26,213,64
#--------------------------------------------------------------------------
TertiaryHUDNormalColor=26,213,64

#--------------------------------------------------------------------------
# Tertiary HUD WARNING FONT color in RGB format: red,green,blue (0-255)
#
# Default is bright red: 243,17,17
#--------------------------------------------------------------------------
TertiaryHUDWarningColor=243,17,17

#--------------------------------------------------------------------------
# Tertiary HUD BACKGROUND color in RGB format: red,green,blue (0-255)
#
# Default is transparent: 255,255,255.  Any other color will result in an opaque background of that color.
#--------------------------------------------------------------------------
TertiaryHUDBackgroundColor=255,255,255

#--------------------------------------------------------------------------
# Enable or disable CHEATCODE settings; globally enables or disables
# processing of any CHEATCODE values set.
#
#   0 = XR CHEATCODEs disabled
#   1 = XR CHEATCODEs enabled (default)
#--------------------------------------------------------------------------
CheatcodesEnabled=1

###########################################################################
#
# Defines the color and fields for all five SECONDARY HUD modes
#
# Each mode has fourteen cells: seven rows and two columns.  
# Column L=left, R=right.  Rows are numbered 1-7.
# Each mode has a color set in RGB (Red/Green/Blue) format; each is 0-255.  e.g., 243,17,17
#
# Example:
#    To define the left and right side fields for row #1:
#        row1L={field}, {units}   
#        row1R={field}, {units}
#
#    
#--------------------------------------------------------------------------
# Fields IDs are case-sensitive.
# Valid fields and units are:
#
# FIELD     VALID UNITS     DESCRIPTION
# -----     -----------     ------------------------------------------
# Alt       met/imp         Altitude
# Vel       met/imp/M       Velocity
# StatP     met/imp         Atm Static Pressure
# DynP      met/imp         Atm Dynamic Pressure
# OAT       K/F/C           Outside Air Temperature
# Hdg       -               Heading
# v/s       met/imp         Vertical Speed
# AccX      G/met/imp       Acceleration along X axis
# AccY      G/met/imp       Acceleration along Y axis
# AccZ      G/met/imp       Acceleration along Z axis
# Mass      met/imp         Ship mass
# Ecc       -               Orbit Eccentricity
# Inc       -               Orbit Inclination relative to the equator
# PeT       -               Time to Periapsis
# ApT       -               Time to Apoapsis
# PeA       met/imp         Periapsis Altitude
# ApA       met/imp         Apoapsis Altitude
# PeR       met/imp         Periapsis Radius
# ApR       met/imp         Apoapsis Radius
# Pitch     -               Pitch
# Bank      -               Bank
# Slope     -               Glide Slope 
# Slip      -               Slip Angle
# AOA       -               Angle of Attack
# Long      -               Longitude
# Lat       -               Latitude
# LEng      met/imp         Left Engine/Retro Thrust
# REng      met/imp         Right Engine/Retro Thrust
# MEng      met/imp         Both Main Engines' Thrust
# FHov      met/imp         Forward Hover Engine Thrust
# AHov      met/imp         Aft Hover Engine Thrust
# BHov      met/imp         Both Hover Engines' Thrust
# LScrm     met/imp         Left SCRAM Engine Thrust
# RScrm     met/imp         Right SCRAM Engine Thrust
# BScrm     met/imp         Both SCRAM Engines' Thrust
# rcs_1     met/imp         Forward Lower RCS Thrust
# rcs_2     met/imp         Aft Upper RCS Thrust
# rcs_3     met/imp         Forward Upper RCS Thrust
# rcs_4     met/imp         Aft Lower RCS Thrust
# rcs_5     met/imp         Forward Starboard RCS Thrust
# rcs_6     met/imp         Aft Port RCS Thrust
# rcs_7     met/imp         Forward Port RCS Thrust
# rcs_8     met/imp         Aft Starboard RCS Thrust
# rcs_9     met/imp         Outboard Upper Port RCS Thrust
# rcs_10    met/imp         Outboard Lower Starboard RCS Thrust
# rcs_11    met/imp         Outboard Upper Starboard RCS Thrust
# rcs_12    met/imp         Outboard Lower Port RCS Thrust
# rcs_13    met/imp         Aft RCS Thrust (+Z axis)
# rcs_14    met/imp         Forward RCS Thrust (-Z axis)
# LDtmp     K/F/C           Left SCRAM Diffuser Temp
# LCtmp     K/F/C           Left SCRAM Combustion Chamber Temp
# LEtmp     K/F/C           Left SCRAM Exhaust Temp
# RDtmp     K/F/C           Right SCRAM Diffuser Temp
# RCtmp     K/F/C           Right SCRAM Combustion Chamber Temp
# REtmp     K/F/C           Right SCRAM Exhaust Temp
#--------------------------------------------------------------------------
# Valid units are:
#    met      (metric)     : km/meters/kg, etc.
#    imp      (imperial)   : ft/miles/pounds, etc.
#    G        (gravities)  : related to acceleration
#    M        (Mach)       : related to speed
#    K        (Kelvin)     : temperature
#    F        (Fahrenheit) : temperature
#    C        (Celsiuis)   : temperature
#    -        "N/A"; used for fields where only one unit is valid, such as "degrees" for angles
#--------------------------------------------------------------------------
#
# NOTE: the default background for each HUD is transparent.
# If you prefer a solid background, start with something like this and then experiment from there:
#
# [Dark blue text on light gray background]
#    TextColor=42, 58, 130        
#    BackgroundColor=217, 217, 217
###########################################################################

[SECONDARYHUD-1]
# The default settings for this mode are useful for REENTRY
# RED text on TRANSPARENT background
TextColor=242,64,64
BackgroundColor=255,255,255

row1L=Alt met
row1R=Alt imp

row2L=AccY G
row2R=AccZ G

row3L=Vel imp
row3R=Vel M
 
row4L=Mass imp
row4R=Mass met

row5L=Hdg -
row5R=Slope -

row6L=AOA -
row6R=Pitch -

row7L=v/s met
row7R=v/s imp

#--------------------------------------------------------------------------

[SECONDARYHUD-2]
# The default settings for this mode are useful for ASCENT TO ORBIT
# YELLOW text on TRANSPARENT background
TextColor=221, 221, 40
BackgroundColor=255,255,255

row1L=Alt met
row1R=Alt imp

row2L=DynP imp
row2R=StatP imp

row3L=PeA met
row3R=v/s met

row4L=ApA met
row4R=v/s imp

row5L=ApT -
row5R=Vel imp

row6L=MEng imp
row6R=BScrm imp

row7L=Mass imp
row7R=BHov imp

#--------------------------------------------------------------------------

[SECONDARYHUD-3]
# The default settings for this mode are useful for ATMOSPHERIC FLIGHT/LANDING
# DARK BLUE text on LIGHT GRAY background
# To make this transparent like the other HUD modes, change BackgroundColor to 255,255,255 
# and then change the TextColor to something else.
TextColor=42,58, 130
BackgroundColor=192,192,192

row1L=Alt imp
row1R=Alt met

row2L=StatP imp
row2R=DynP imp

row3L=Mass imp
row3R=Hdg -

row4L=v/s imp
row4R=v/s met

row5L=Vel imp
row5R=Vel M

row6L=AOA -
row6R=Slope -

row7L=Long -
row7R=Lat -

#--------------------------------------------------------------------------

[SECONDARYHUD-4]
# The default settings for this mode are useful for DOCKING
# BLUE text on TRANSPARENT background
TextColor=162,190,255
BackgroundColor=255,255,255

row1L=rcs1 imp
row1R=rcs2 imp

row2L=rcs3 imp
row2R=rcs4 imp

row3L=rcs5 imp
row3R=rcs6 imp

row4L=rcs7 imp
row4R=rcs8 imp

row5L=rcs9 imp
row5R=rcs10 imp

row6L=rcs11 imp
row6R=rcs12 imp

row7L=rcs13 imp
row7R=rcs14 imp

#--------------------------------------------------------------------------

[SECONDARYHUD-5]
# The default settings for this mode are useful for ON-ORBIT OPS
# GREEN text on TRANSPARENT background
TextColor=26,213,64
BackgroundColor=255,255,255

row1L=Alt met
row1R=Alt imp

row2L=Ecc -
row2R=Inc -

row3L=PeT -
row3R=ApT -

row4L=PeA met
row4R=PeA imp

row5L=ApA met
row5R=ApA imp

row6L=Vel imp
row6R=Vel met

row7L=Mass imp
row7R=Mass met

###########################################################################
#
# Define CHEATCODE values that allow certain ship values to be set directly,
# override any default values or other values specified earlier in this file.
#
# WARNING: THESE VALUES ARE *NOT* RANGE-CHECKED IN ANY WAY!  
# This means that you can likely cause a CTD ("Crash To Desktop") by 
# setting them incorrectly.  (However, your Orbiter installation will
# not be affected -- at worst you will have to change the setting and 
# restart Orbiter.)
#
# Also note that you may need to disable one or more damage checks if 
# you significantly increase the ship's mass; otherwise you may collapse 
# the landing gear or overheat the hull too easily.
#
# To set a value and enable the cheatcode, simply *uncomment* it by 
# deleting the '#' character on the beginning of the line.
#
###########################################################################

[CHEATCODES]

#--------------------------------------------------------------------------
# Empty mass in kg
#--------------------------------------------------------------------------
#EmptyMass=266400

#--------------------------------------------------------------------------
# Fixed Cargo mass in kg
#
# WARNING: if this is enabled the actual mass of any payload in the bay
#          is ignored!
#
# 1/4 cargo:  108000
# 1/2 cargo:  216000
# Full cargo: 432000
#--------------------------------------------------------------------------
#CargoMass=432000

#--------------------------------------------------------------------------
# Maximum range that payload a module may be grappled in meters 
# while in orbit and while landed.
#--------------------------------------------------------------------------
#PayloadGrappleRangeOrbit=22.0
#PayloadGrappleRangeLanded=400.0

#--------------------------------------------------------------------------
# Maximum allowed delta-V payload a module may be grappled in meters/second.
#--------------------------------------------------------------------------
#PayloadGrappleMaxDeltaV=0.5

#--------------------------------------------------------------------------
# Main fuel tank capacity in kg
#--------------------------------------------------------------------------
#MainTankCapacity=230880.0

#--------------------------------------------------------------------------
# SCRAM fuel tank capacity in kg
#--------------------------------------------------------------------------
#ScramTankCapacity=55500.0

#--------------------------------------------------------------------------
# RCS fuel tank capacity in kg
#--------------------------------------------------------------------------
#RCSTankCapacity=13220.0

#--------------------------------------------------------------------------
# APU fuel tank capacity in kg
#--------------------------------------------------------------------------
#APUTankCapacity=4440.0

#--------------------------------------------------------------------------
# Main fuel ISP (specific impulse).  This determines how much 
# main/hover/rcs fuel is burned each second for a given thrust level.
#
# This value overrides the 'MainFuelISP' setting in the [GENERAL] section.
#--------------------------------------------------------------------------
#MainFuelISP=40000.0

#--------------------------------------------------------------------------
# Maximum main engine thrust in newtons, PER ENGINE (x2 for total)
#--------------------------------------------------------------------------
#MaxMainThrust=5328e3

#--------------------------------------------------------------------------
# Maximum hover engine thrust in newtons, PER ENGINE (x2 for total)
# 
# Note: internally the three engines are controlled as two separate 
# engines: fore and aft.
#--------------------------------------------------------------------------
#MaxHoverThrust=4031.74e3

#--------------------------------------------------------------------------
# Maximum retro engine thrust in newtons, PER ENGINE (x2 for total)
#--------------------------------------------------------------------------
#MaxRetroThrust=905.76e3

#--------------------------------------------------------------------------
# Maximum RCS Jet thrust in newtons; this affects all 14 jets
#--------------------------------------------------------------------------
#MaxRCSThrust=55.50e3

#--------------------------------------------------------------------------
# SCRAM Fuel Heating Value (FHV).  The higher the FHV, the more thrust 
# is produced from one kg of propellant.  Alter this value if you want to
# adjust the maximum SCRAM engine thrust.
#
# Note: the FHV for Hydrogen is 1.42e8 J/kg (joules per kg).  
#--------------------------------------------------------------------------
#ScramFHV=3.5e8

#--------------------------------------------------------------------------
# Maximum wheelbrake force in newtons
#--------------------------------------------------------------------------
#MaxWheelbrakeForce=2.22e6

#--------------------------------------------------------------------------
# Wheel friction coefficient (and resistance) when rolling on the ground; 
# also affects braking performance.
#--------------------------------------------------------------------------
#WheelSurfaceFrictionCoeff=0.025

#--------------------------------------------------------------------------
# ATTITUDE HOLD: Maximum AOA/pitch and bank that can be held when the other 
# axis is set to a non-zero target; the default is 60 degrees.
# This must be evenly divisible by 5!
#
# WARNING: increasing this value could cause the autopilot to get confused
# under certain conditions.
#--------------------------------------------------------------------------
#MaxAttitudeHoldNormal=60

#--------------------------------------------------------------------------
# ATTITUDE HOLD: Absolute bank limit; this is the limit when the pitch/AOA 
# target is set to zero degrees.
# This must be evenly divisible by 5!
#
# WARNING: increasing this value could cause the autopilot to get confused
# under certain conditions.
#--------------------------------------------------------------------------
#MaxAttitudeHoldAbsoluteBank=75

#--------------------------------------------------------------------------
# ATTITUDE HOLD: Absolute pitch/AOA ; used when the other axis
# is set to a zero target.
# This must be evenly divisible by 2.5!
#
# WARNING: increasing this value could cause the autopilot to get confused
# under certain conditions.
#--------------------------------------------------------------------------
#MaxAttitudeHoldAbsolutePitchOrAOA=87.5

###########################################################################
# END OF FILE
###########################################################################
